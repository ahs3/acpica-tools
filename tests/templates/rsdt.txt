
Intel ACPI Component Architecture
ASL+ Optimizing Compiler/Disassembler version 20190703 (32-bit version)
Copyright (c) 2000 - 2019 Intel Corporation

Compilation of "rsdt.asl" - Fri Aug  2 08:55:58 2019

Starting preprocessing phase


Pr(0036) - Pop InputFile Stack, Fnode 00000000

Preprocessing phase complete 


Field List:
LineNo   ByteOff  NameCol  Column   TableOff Flags                             Name : Value

0000000A 0000012A 00000024 00000030 00000000 00                           Signature : RSDT
0000000B 00000184 00000021 00000030 00000000 00                        Table Length : 00000044
0000000C 000001BD 00000025 00000030 00000000 00                            Revision : 01
0000000D 000001F0 00000025 00000030 00000000 00                            Checksum : B1
0000000E 00000223 00000027 00000030 00000000 00                              Oem ID : INTEL 
0000000F 0000025C 00000021 00000030 00000000 00                        Oem Table ID : TEMPLATE
00000010 00000297 00000021 00000030 00000000 00                        Oem Revision : 00000001
00000011 000002D0 0000001E 00000030 00000000 00                     Asl Compiler ID : INTL
00000012 00000307 00000018 00000030 00000000 00               Asl Compiler Revision : 20100528
00000014 00000342 00000017 00000030 00000000 00              ACPI Table Address   0 : 00000010
00000015 0000037B 00000017 00000030 00000000 00              ACPI Table Address   1 : 00000020
00000016 000003B4 00000017 00000030 00000000 00              ACPI Table Address   2 : 00000030
00000017 000003ED 00000017 00000030 00000000 00              ACPI Table Address   3 : 00000040
00000018 00000426 00000017 00000030 00000000 00              ACPI Table Address   4 : 00000050
00000019 0000045F 00000017 00000030 00000000 00              ACPI Table Address   5 : 00000060
0000001A 00000498 00000017 00000030 00000000 00              ACPI Table Address   6 : 00000070
0000001B 000004D1 00000017 00000030 00000000 00              ACPI Table Address   7 : 00000080


Full Integer expression: 00000044
**** Input expression: 00000044  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 68 (0000000000000044)
Full Integer expression: 01
**** Input expression: 01  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 1 (0000000000000001)
Full Integer expression: B1
**** Input expression: B1  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 177 (00000000000000B1)
Full Integer expression: 00000001
**** Input expression: 00000001  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 1 (0000000000000001)
Full Integer expression: 20190703
**** Input expression: 20190703  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 538511107 (0000000020190703)
Full Integer expression: 00000010
**** Input expression: 00000010  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 16 (0000000000000010)
Full Integer expression: 00000020
**** Input expression: 00000020  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 32 (0000000000000020)
Full Integer expression: 00000030
**** Input expression: 00000030  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 48 (0000000000000030)
Full Integer expression: 00000040
**** Input expression: 00000040  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 64 (0000000000000040)
Full Integer expression: 00000050
**** Input expression: 00000050  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 80 (0000000000000050)
Full Integer expression: 00000060
**** Input expression: 00000060  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 96 (0000000000000060)
Full Integer expression: 00000070
**** Input expression: 00000070  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 112 (0000000000000070)
Full Integer expression: 00000080
**** Input expression: 00000080  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 128 (0000000000000080)

Field List:
LineNo   ByteOff  NameCol  Column   TableOff Flags                             Name : Value

0000000A 0000012A 00000024 00000030 00001E4B 00                           Signature : RSDT
0000000B 00000184 00000021 00000030 00001E4F 00                        Table Length : 00000044
0000000C 000001BD 00000025 00000030 00001E53 00                            Revision : 01
0000000D 000001F0 00000025 00000030 00001E54 00                            Checksum : B1
0000000E 00000223 00000027 00000030 00001E55 00                              Oem ID : INTEL 
0000000F 0000025C 00000021 00000030 00001E5B 00                        Oem Table ID : TEMPLATE
00000010 00000297 00000021 00000030 00001E63 00                        Oem Revision : 00000001
00000011 000002D0 0000001E 00000030 00001E67 01                     Asl Compiler ID : INTL
00000012 00000307 00000018 00000030 00001E6B 01               Asl Compiler Revision : 20190703
00000014 00000342 00000017 00000030 00000000 00              ACPI Table Address   0 : 00000010
00000015 0000037B 00000017 00000030 00000000 00              ACPI Table Address   1 : 00000020
00000016 000003B4 00000017 00000030 00000000 00              ACPI Table Address   2 : 00000030
00000017 000003ED 00000017 00000030 00000000 00              ACPI Table Address   3 : 00000040
00000018 00000426 00000017 00000030 00000000 00              ACPI Table Address   4 : 00000050
00000019 0000045F 00000017 00000030 00000000 00              ACPI Table Address   5 : 00000060
0000001A 00000498 00000017 00000030 00000000 00              ACPI Table Address   6 : 00000070
0000001B 000004D1 00000017 00000030 00000000 00              ACPI Table Address   7 : 00000080


Subtable Info:
Depth                      Name Length   TotalLen LenSize  Flags    This     Parent   Child    Peer

[0000]                Signature 00000024 00000044 00000004 00000000 03094388 00000000 030943B4 00000000
[0001]                   (null) 00000004 00000004 00000000 00000000 030943B4 03094388 00000000 030943E0
[0001]                   (null) 00000004 00000004 00000000 00000000 030943E0 03094388 00000000 0309440C
[0001]                   (null) 00000004 00000004 00000000 00000000 0309440C 03094388 00000000 03094438
[0001]                   (null) 00000004 00000004 00000000 00000000 03094438 03094388 00000000 03094464
[0001]                   (null) 00000004 00000004 00000000 00000000 03094464 03094388 00000000 03094490
[0001]                   (null) 00000004 00000004 00000000 00000000 03094490 03094388 00000000 030944BC
[0001]                   (null) 00000004 00000004 00000000 00000000 030944BC 03094388 00000000 030944E8
[0001]                   (null) 00000004 00000004 00000000 00000000 030944E8 03094388 00000000 00000000

Subtable Tree: (Depth, Name, Subtable, Length, TotalLength)

[0000]                Signature  03094388 (24) - (44)
[0001]                   (null)     030943B4 (04) - (04)
[0001]                   (null)     030943E0 (04) - (04)
[0001]                   (null)     0309440C (04) - (04)
[0001]                   (null)     03094438 (04) - (04)
[0001]                   (null)     03094464 (04) - (04)
[0001]                   (null)     03094490 (04) - (04)
[0001]                   (null)     030944BC (04) - (04)
[0001]                   (null)     030944E8 (04) - (04)

