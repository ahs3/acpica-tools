
Intel ACPI Component Architecture
ASL+ Optimizing Compiler/Disassembler version 20190703 (32-bit version)
Copyright (c) 2000 - 2019 Intel Corporation

Compilation of "msdm.asl" - Fri Aug  2 08:55:58 2019

Starting preprocessing phase


Pr(0035) - Pop InputFile Stack, Fnode 00000000

Preprocessing phase complete 


Field List:
LineNo   ByteOff  NameCol  Column   TableOff Flags                             Name : Value

0000000A 0000012A 00000024 00000030 00000000 00                           Signature : MSDM
0000000B 00000186 00000021 00000030 00000000 00                        Table Length : 00000064
0000000C 000001BF 00000025 00000030 00000000 00                            Revision : 01
0000000D 000001F2 00000025 00000030 00000000 00                            Checksum : 34
0000000E 00000225 00000027 00000030 00000000 00                              Oem ID : Intel
0000000F 0000025D 00000021 00000030 00000000 00                        Oem Table ID : Template
00000010 00000298 00000021 00000030 00000000 00                        Oem Revision : 00000003
00000011 000002D1 0000001E 00000030 00000000 00                     Asl Compiler ID : INTL
00000012 00000308 00000018 00000030 00000000 00               Asl Compiler Revision : 20150204
00000018 0000041A 00000011 00000030 00000000 00        Software Licensing Structure : 00 00 00 00 0A 10 16 17 18 19 1A 1B 1C 1D 1E 1F      20 21 22 23 24 25 26 27 10 0A 15 16 17 18 19 1A      1B 1C 1D 1E 1F 20 21 22 23 24 25 26 16 15 0A 10      16 17 18 19 1A 1B 1C 1D 1E 1F 20 21 22 23 24 25


Full Integer expression: 00000064
**** Input expression: 00000064  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 100 (0000000000000064)
Full Integer expression: 01
**** Input expression: 01  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 1 (0000000000000001)
Full Integer expression: 34
**** Input expression: 34  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 52 (0000000000000034)
Full Integer expression: 00000003
**** Input expression: 00000003  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 3 (0000000000000003)
Full Integer expression: 20190703
**** Input expression: 20190703  (Base 16)
Starting parse
Entering state 0
Reading a token: Next token is token OP_EXP_NUMBER ()
Shifting token OP_EXP_NUMBER ()
Entering state 1
Reducing stack by rule 25 (line 286):
   $1 = token OP_EXP_NUMBER ()
-> $$ = nterm Expression ()
Stack now 0
Entering state 9
Reading a token: Next token is token OP_EXP_EOF ()
Shifting token OP_EXP_EOF ()
Entering state 14
Reducing stack by rule 2 (line 237):
   $1 = nterm Expression ()
   $2 = token OP_EXP_EOF ()
**** Parser returned value: 538511107 (0000000020190703)

Field List:
LineNo   ByteOff  NameCol  Column   TableOff Flags                             Name : Value

0000000A 0000012A 00000024 00000030 0000175F 00                           Signature : MSDM
0000000B 00000186 00000021 00000030 00001763 00                        Table Length : 00000064
0000000C 000001BF 00000025 00000030 00001767 00                            Revision : 01
0000000D 000001F2 00000025 00000030 00001768 00                            Checksum : 34
0000000E 00000225 00000027 00000030 00001769 00                              Oem ID : Intel
0000000F 0000025D 00000021 00000030 0000176F 00                        Oem Table ID : Template
00000010 00000298 00000021 00000030 00001777 00                        Oem Revision : 00000003
00000011 000002D1 0000001E 00000030 0000177B 01                     Asl Compiler ID : INTL
00000012 00000308 00000018 00000030 0000177F 01               Asl Compiler Revision : 20190703
00000018 0000041A 00000011 00000030 00001783 00        Software Licensing Structure : 00 00 00 00 0A 10 16 17 18 19 1A 1B 1C 1D 1E 1F      20 21 22 23 24 25 26 27 10 0A 15 16 17 18 19 1A      1B 1C 1D 1E 1F 20 21 22 23 24 25 26 16 15 0A 10      16 17 18 19 1A 1B 1C 1D 1E 1F 20 21 22 23 24 25


Subtable Info:
Depth                      Name Length   TotalLen LenSize  Flags    This     Parent   Child    Peer

[0000]                Signature 00000024 00000064 00000004 00000000 0306C720 00000000 0306C74C 00000000
[0001] Software Licensing Structure 00000040 00000040 00000000 00000000 0306C74C 0306C720 00000000 00000000

Subtable Tree: (Depth, Name, Subtable, Length, TotalLength)

[0000]                Signature  0306C720 (24) - (64)
[0001] Software Licensing Structure     0306C74C (40) - (40)

