Use proper integer formatting

From: Al Stone <ahs3@redhat.com>


---
 source/compiler/aslerror.c              |    4 ++--
 source/compiler/aslopt.c                |    2 +-
 source/compiler/aslprepkg.c             |    2 +-
 source/components/debugger/dbexec.c     |    2 +-
 source/components/dispatcher/dsmthdat.c |    4 ++--
 source/components/dispatcher/dsutils.c  |    2 +-
 source/components/dispatcher/dswscope.c |    4 ++--
 source/components/events/evgpe.c        |    4 ++--
 source/components/executer/exdump.c     |    2 +-
 source/components/executer/exfldio.c    |    4 ++--
 source/components/executer/exnames.c    |    4 ++--
 source/components/hardware/hwregs.c     |    2 +-
 source/components/tables/tbfadt.c       |    6 +++---
 source/components/tables/tbxfroot.c     |    6 +++---
 source/components/utilities/utownerid.c |    2 +-
 18 files changed, 28 insertions(+), 28 deletions(-)

Index: acpica-unix-20190405/source/compiler/aslerror.c
===================================================================
--- acpica-unix-20190405.orig/source/compiler/aslerror.c
+++ acpica-unix-20190405/source/compiler/aslerror.c
@@ -906,7 +906,7 @@ AslLogNewError (
     AslGbl_ExceptionCount[ModifiedLevel]++;
     if (!AslGbl_IgnoreErrors && AslGbl_ExceptionCount[ASL_ERROR] > ASL_MAX_ERROR_COUNT)
     {
-        printf ("\nMaximum error count (%u) exceeded\n", ASL_MAX_ERROR_COUNT);
+        printf ("\nMaximum error count (%d) exceeded\n", ASL_MAX_ERROR_COUNT);
 
         AslGbl_SourceLine = 0;
         AslGbl_NextError = AslGbl_ErrorLog;
Index: acpica-unix-20190405/source/compiler/aslopt.c
===================================================================
--- acpica-unix-20190405.orig/source/compiler/aslopt.c
+++ acpica-unix-20190405/source/compiler/aslopt.c
@@ -583,7 +583,7 @@ OptOptimizeNamePath (
     }
 
     ACPI_DEBUG_PRINT_RAW ((ACPI_DB_OPTIMIZATIONS,
-        "PATH OPTIMIZE: Line %5d ParentOp [%12.12s] ThisOp [%12.12s] ",
+        "PATH OPTIMIZE: Line %5u ParentOp [%12.12s] ThisOp [%12.12s] ",
         Op->Asl.LogicalLineNumber,
         AcpiPsGetOpcodeName (Op->Common.Parent->Common.AmlOpcode),
         AcpiPsGetOpcodeName (Op->Common.AmlOpcode)));
Index: acpica-unix-20190405/source/compiler/aslprepkg.c
===================================================================
--- acpica-unix-20190405.orig/source/compiler/aslprepkg.c
+++ acpica-unix-20190405/source/compiler/aslprepkg.c
@@ -309,7 +309,7 @@ ApCheckPackage (
 
         if (Count & 1)
         {
-            sprintf (AslGbl_MsgBuffer, "%4.4s: Package length, %d, must be even.",
+            sprintf (AslGbl_MsgBuffer, "%4.4s: Package length, %u, must be even.",
                 Predefined->Info.Name, Count);
 
             AslError (ASL_ERROR, ASL_MSG_RESERVED_PACKAGE_LENGTH,
Index: acpica-unix-20190405/source/components/debugger/dbexec.c
===================================================================
--- acpica-unix-20190405.orig/source/components/debugger/dbexec.c
+++ acpica-unix-20190405/source/components/debugger/dbexec.c
@@ -230,7 +230,7 @@ AcpiDbExecuteMethod (
             ACPI_ERROR ((AE_INFO,
                 "Possible buffer overflow within AML Debugger "
                 "buffer (size 0x%X needed 0x%X)",
-                ACPI_DEBUG_BUFFER_SIZE, (UINT32) ReturnObj->Length));
+                (UINT32) ACPI_DEBUG_BUFFER_SIZE, (UINT32) ReturnObj->Length));
         }
     }
 
Index: acpica-unix-20190405/source/components/dispatcher/dsmthdat.c
===================================================================
--- acpica-unix-20190405.orig/source/components/dispatcher/dsmthdat.c
+++ acpica-unix-20190405/source/components/dispatcher/dsmthdat.c
@@ -291,7 +291,7 @@ AcpiDsMethodDataGetNode (
         if (Index > ACPI_METHOD_MAX_LOCAL)
         {
             ACPI_ERROR ((AE_INFO,
-                "Local index %u is invalid (max %u)",
+                "Local index %u is invalid (max %d)",
                 Index, ACPI_METHOD_MAX_LOCAL));
             return_ACPI_STATUS (AE_AML_INVALID_INDEX);
         }
@@ -306,7 +306,7 @@ AcpiDsMethodDataGetNode (
         if (Index > ACPI_METHOD_MAX_ARG)
         {
             ACPI_ERROR ((AE_INFO,
-                "Arg index %u is invalid (max %u)",
+                "Arg index %u is invalid (max %d)",
                 Index, ACPI_METHOD_MAX_ARG));
             return_ACPI_STATUS (AE_AML_INVALID_INDEX);
         }
Index: acpica-unix-20190405/source/components/dispatcher/dsutils.c
===================================================================
--- acpica-unix-20190405.orig/source/components/dispatcher/dsutils.c
+++ acpica-unix-20190405/source/components/dispatcher/dsutils.c
@@ -786,7 +786,7 @@ AcpiDsCreateOperands (
     }
 
     ACPI_DEBUG_PRINT ((ACPI_DB_DISPATCH,
-        "NumOperands %d, ArgCount %d, Index %d\n",
+        "NumOperands %d, ArgCount %u, Index %u\n",
         WalkState->NumOperands, ArgCount, Index));
 
     /* Create the interpreter arguments, in reverse order */
Index: acpica-unix-20190405/source/components/dispatcher/dswscope.c
===================================================================
--- acpica-unix-20190405.orig/source/components/dispatcher/dswscope.c
+++ acpica-unix-20190405/source/components/dispatcher/dswscope.c
@@ -149,7 +149,7 @@ AcpiDsScopeStackPush (
     WalkState->ScopeDepth++;
 
     ACPI_DEBUG_PRINT ((ACPI_DB_EXEC,
-        "[%.2d] Pushed scope ", (UINT32) WalkState->ScopeDepth));
+        "[%.2d] Pushed scope ", WalkState->ScopeDepth));
 
     OldScopeInfo = WalkState->ScopeInfo;
     if (OldScopeInfo)
@@ -211,7 +211,7 @@ AcpiDsScopeStackPop (
     WalkState->ScopeDepth--;
 
     ACPI_DEBUG_PRINT ((ACPI_DB_EXEC,
-        "[%.2d] Popped scope [%4.4s] (%s), New scope -> ",
+        "[%.2u] Popped scope [%4.4s] (%s), New scope -> ",
         (UINT32) WalkState->ScopeDepth,
         AcpiUtGetNodeName (ScopeInfo->Scope.Node),
         AcpiUtGetTypeName (ScopeInfo->Common.Value)));
Index: acpica-unix-20190405/source/components/events/evgpe.c
===================================================================
--- acpica-unix-20190405.orig/source/components/events/evgpe.c
+++ acpica-unix-20190405/source/components/events/evgpe.c
@@ -489,7 +489,7 @@ AcpiEvGpeDetect (
                     "Ignore disabled registers for GPE %02X-%02X: "
                     "RunEnable=%02X, WakeEnable=%02X\n",
                     GpeRegisterInfo->BaseGpeNumber,
-                    GpeRegisterInfo->BaseGpeNumber + (ACPI_GPE_REGISTER_WIDTH - 1),
+                    (unsigned int) (GpeRegisterInfo->BaseGpeNumber + (ACPI_GPE_REGISTER_WIDTH - 1)),
                     GpeRegisterInfo->EnableForRun,
                     GpeRegisterInfo->EnableForWake));
                 continue;
Index: acpica-unix-20190405/source/components/executer/exdump.c
===================================================================
--- acpica-unix-20190405.orig/source/components/executer/exdump.c
+++ acpica-unix-20190405/source/components/executer/exdump.c
@@ -678,7 +678,7 @@ AcpiExDumpOperand (
     if (Depth > 0)
     {
         ACPI_DEBUG_PRINT ((ACPI_DB_EXEC, "%*s[%u] %p Refs=%u ",
-            Depth, " ", Depth, ObjDesc, ObjDesc->Common.ReferenceCount));
+            (int) Depth, " ", Depth, ObjDesc, ObjDesc->Common.ReferenceCount));
     }
     else
     {
Index: acpica-unix-20190405/source/components/executer/exfldio.c
===================================================================
--- acpica-unix-20190405.orig/source/components/executer/exfldio.c
+++ acpica-unix-20190405/source/components/executer/exfldio.c
@@ -681,8 +681,8 @@ AcpiExWriteWithUpdateRule (
 
             ACPI_ERROR ((AE_INFO,
                 "Unknown UpdateRule value: 0x%X",
-                (ObjDesc->CommonField.FieldFlags &
-                    AML_FIELD_UPDATE_RULE_MASK)));
+                (unsigned int) (ObjDesc->CommonField.FieldFlags &
+                                   AML_FIELD_UPDATE_RULE_MASK)));
             return_ACPI_STATUS (AE_AML_OPERAND_VALUE);
         }
     }
Index: acpica-unix-20190405/source/components/executer/exnames.c
===================================================================
--- acpica-unix-20190405.orig/source/components/executer/exnames.c
+++ acpica-unix-20190405/source/components/executer/exnames.c
@@ -237,7 +237,7 @@ AcpiExNameSegment (
          */
         ACPI_DEBUG_PRINT ((ACPI_DB_INFO,
             "Leading character is not alpha: %02Xh (not a name)\n",
-            CharBuf[0]));
+            (unsigned int) CharBuf[0]));
         Status = AE_CTRL_PENDING;
     }
     else
@@ -249,7 +249,7 @@ AcpiExNameSegment (
         Status = AE_AML_BAD_NAME;
         ACPI_ERROR ((AE_INFO,
             "Bad character 0x%02x in name, at %p",
-            *AmlAddress, AmlAddress));
+            (unsigned int) (*AmlAddress), AmlAddress));
     }
 
     *InAmlAddress = ACPI_CAST_PTR (UINT8, AmlAddress);
Index: acpica-unix-20190405/source/components/hardware/hwregs.c
===================================================================
--- acpica-unix-20190405.orig/source/components/hardware/hwregs.c
+++ acpica-unix-20190405/source/components/hardware/hwregs.c
@@ -460,7 +460,7 @@ AcpiHwClearAcpiStatus (
 
 
     ACPI_DEBUG_PRINT ((ACPI_DB_IO, "About to write %04X to %8.8X%8.8X\n",
-        ACPI_BITMASK_ALL_FIXED_STATUS,
+        (UINT32) ACPI_BITMASK_ALL_FIXED_STATUS,
         ACPI_FORMAT_UINT64 (AcpiGbl_XPm1aStatus.Address)));
 
     LockFlags = AcpiOsAcquireLock (AcpiGbl_HardwareLock);
Index: acpica-unix-20190405/source/components/tables/tbfadt.c
===================================================================
--- acpica-unix-20190405.orig/source/components/tables/tbfadt.c
+++ acpica-unix-20190405/source/components/tables/tbfadt.c
@@ -233,7 +233,7 @@ AcpiTbInitGenericAddress (
         if (!(Flags & ACPI_FADT_GPE_REGISTER))
         {
             ACPI_ERROR ((AE_INFO,
-                "%s - 32-bit FADT register is too long (%u bytes, %u bits) "
+                "%s - 32-bit FADT register is too long (%u bytes, %d bits) "
                 "to convert to GAS struct - 255 bits max, truncating",
                 RegisterName, ByteWidth, (ByteWidth * 8)));
         }
@@ -304,7 +304,7 @@ AcpiTbSelectAddress (
 
         ACPI_BIOS_WARNING ((AE_INFO,
             "32/64X %s address mismatch in FADT: "
-            "0x%8.8X/0x%8.8X%8.8X, using %u-bit address",
+            "0x%8.8X/0x%8.8X%8.8X, using %d-bit address",
             RegisterName, Address32, ACPI_FORMAT_UINT64 (Address64),
             AcpiGbl_Use32BitFadtAddresses ? 32 : 64));
 
@@ -628,7 +628,7 @@ AcpiTbConvertFadt (
 
                     ACPI_BIOS_WARNING ((AE_INFO,
                         "32/64X address mismatch in FADT/%s: "
-                        "0x%8.8X/0x%8.8X%8.8X, using %u-bit address",
+                        "0x%8.8X/0x%8.8X%8.8X, using %d-bit address",
                         Name, Address32,
                         ACPI_FORMAT_UINT64 (Address64->Address),
                         AcpiGbl_Use32BitFadtAddresses ? 32 : 64));
Index: acpica-unix-20190405/source/components/tables/tbxfroot.c
===================================================================
--- acpica-unix-20190405.orig/source/components/tables/tbxfroot.c
+++ acpica-unix-20190405/source/components/tables/tbxfroot.c
@@ -177,7 +177,7 @@ AcpiFindRootPointer (
     {
         ACPI_ERROR ((AE_INFO,
             "Could not map memory at 0x%8.8X for length %u",
-            ACPI_EBDA_PTR_LOCATION, ACPI_EBDA_PTR_LENGTH));
+            (UINT32) ACPI_EBDA_PTR_LOCATION, (UINT32) ACPI_EBDA_PTR_LENGTH));
 
         return_ACPI_STATUS (AE_NO_MEMORY);
     }
@@ -204,7 +204,7 @@ AcpiFindRootPointer (
         {
             ACPI_ERROR ((AE_INFO,
                 "Could not map memory at 0x%8.8X for length %u",
-                PhysicalAddress, ACPI_EBDA_WINDOW_SIZE));
+                PhysicalAddress, (UINT32) ACPI_EBDA_WINDOW_SIZE));
 
             return_ACPI_STATUS (AE_NO_MEMORY);
         }
@@ -236,7 +236,7 @@ AcpiFindRootPointer (
     {
         ACPI_ERROR ((AE_INFO,
             "Could not map memory at 0x%8.8X for length %u",
-            ACPI_HI_RSDP_WINDOW_BASE, ACPI_HI_RSDP_WINDOW_SIZE));
+            (UINT32) ACPI_HI_RSDP_WINDOW_BASE, (UINT32) ACPI_HI_RSDP_WINDOW_SIZE));
 
         return_ACPI_STATUS (AE_NO_MEMORY);
     }
Index: acpica-unix-20190405/source/components/utilities/utownerid.c
===================================================================
--- acpica-unix-20190405.orig/source/components/utilities/utownerid.c
+++ acpica-unix-20190405/source/components/utilities/utownerid.c
@@ -237,7 +237,7 @@ AcpiUtReleaseOwnerId (
     else
     {
         ACPI_ERROR ((AE_INFO,
-            "Release of non-allocated OwnerId: 0x%2.2X", OwnerId + 1));
+            "Release of non-allocated OwnerId: 0x%2.2X", (UINT32) OwnerId + 1));
     }
 
     (void) AcpiUtReleaseMutex (ACPI_MTX_CACHES);
